{"ast":null,"code":"import CartActionTypes from \"./action-types\";\nconst initialState = {\n  products: [],\n  productsTotalPrice: 0\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CartActionTypes.ADD_PRODUCT:\n      //verifica se o produto ja esta no carrinho\n      const productIsAlreadyinCart = state.products.some(product => product.id === action.payload.id);\n\n      //Se ele estiver, aumente a quantidade em 1\n      if (productIsAlreadyinCart) {\n        return {\n          ...state,\n          products: state.products.map(product => product.id === action.payload.id ? {\n            ...product,\n            quantity: product.quantity + 1\n          } : product)\n        };\n      }\n      //Se ele nao estiver, entao adicione\n      return {\n        ...state,\n        products: [...state.products, {\n          ...action.payload,\n          quantity: 1\n        }]\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["CartActionTypes","initialState","products","productsTotalPrice","cartReducer","state","action","type","ADD_PRODUCT","productIsAlreadyinCart","some","product","id","payload","map","quantity"],"sources":["/home/joao/Desktop/my-projects/react-redux-web-app/src/redux/cart/reducer.js"],"sourcesContent":["import CartActionTypes from \"./action-types\"\n\nconst initialState = {\n    products: [],\n    productsTotalPrice: 0\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CartActionTypes.ADD_PRODUCT:\n\n            //verifica se o produto ja esta no carrinho\n            const productIsAlreadyinCart = state.products.some(\n                (product) => product.id === action.payload.id\n            );\n\n            //Se ele estiver, aumente a quantidade em 1\n            if (productIsAlreadyinCart) {\n                return {\n                    ...state,\n                    products: state.products.map((product) =>\n                        product.id === action.payload.id\n                            ? { ...product, quantity: product.quantity + 1 }\n                            : product\n                    )\n                }\n            }\n            //Se ele nao estiver, entao adicione\n            return {\n                ...state,\n                products: [...state.products, { ...action.payload, quantity: 1 }]\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n\nexport default cartReducer\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,gBAAgB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,kBAAkB,EAAE;AACxB,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,eAAe,CAACQ,WAAW;MAE5B;MACA,MAAMC,sBAAsB,GAAGJ,KAAK,CAACH,QAAQ,CAACQ,IAAI,CAC7CC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,CAChD;;MAED;MACA,IAAIH,sBAAsB,EAAE;QACxB,OAAO;UACH,GAAGJ,KAAK;UACRH,QAAQ,EAAEG,KAAK,CAACH,QAAQ,CAACY,GAAG,CAAEH,OAAO,IACjCA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,GAC1B;YAAE,GAAGD,OAAO;YAAEI,QAAQ,EAAEJ,OAAO,CAACI,QAAQ,GAAG;UAAE,CAAC,GAC9CJ,OAAO;QAErB,CAAC;MACL;MACA;MACA,OAAO;QACH,GAAGN,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAE;UAAE,GAAGI,MAAM,CAACO,OAAO;UAAEE,QAAQ,EAAE;QAAE,CAAC;MACpE,CAAC;IAEL;MACI,OAAOV,KAAK;EAAC;AAIzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}